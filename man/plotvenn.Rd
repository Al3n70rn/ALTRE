% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingfunctions.R
\name{plotvenn}
\alias{plotvenn}
\title{Plots a venn diagram that compares altered regions as determined by peak presence or by
differential counts.  The type of regulatory region (TSS-proximal, TSS-distal, or both)
and type of peak comparison (intensity or peak) must be specified.}
\usage{
plotvenn(analysisresultsmatrix, region = "both", method = "intensity",
  color = "redorange")
}
\arguments{
\item{analysisresultsmatrix}{analysisresults of Intensity analysis place into
analysisresults matrix by the analyzeanalysisresults function}

\item{region}{pick a region, regions can be 'TSS-distal', 'TSS-proximal', or 'both'
INCLUDE quotes}

\item{method}{pick a method, methods can be 'intensity' or 'peak'
include quotes}

\item{color}{include the colors you want in your venn diagram}
}
\value{
venn diagram
}
\description{
Plots a venn diagram that compares altered regions as determined by peak presence or by
differential counts.  The type of regulatory region (TSS-proximal, TSS-distal, or both)
and type of peak comparison (intensity or peak) must be specified.
}
\examples{
\dontrun{
csvfile <- file.path(dir="yourfilepath", 'sampleinfo.csv')
sampleinfo <- loadCSVFile(csvfile)
samplePeaks <- loadBedFiles(sampleinfo)
consPeaks <- getConsensusPeaks(samplepeaks = samplePeaks, minreps = 2)
plotConsensusPeaks(samplepeaks = consPeaks)
TSSannot <- getTSS()
consPeaksAnnotated <- combineAnnotatePeaks(conspeaks = consPeaks,
                                           TSS = TSSannot,
                                           merge = TRUE,
                                           regionspecific = TRUE,
                                           distancefromTSSdist = 1500,
                                           distancefromTSSprox = 1000)
counts_consPeaks <- getCounts(annotpeaks = consPeaksAnnotated,
                              sampleinfo = sampleinfo,
                              reference = 'SAEC')
altre_peaks <- countanalysis(counts=counts_consPeaks,
                             pval=0.01,
                             lfcvalue=1)
categaltre_peaks=categAltrePeaks(altre_peaks,
lfctypespecific=1.5,
	lfcshared=1.2,
	pvaltypespecific=0.01,
	pvalshared=0.05)
analysisresults <- comparePeaksAltre(categaltre_peaks, reference= "SAEC")
plot1 <- plotvenn(analysisresults,
                  region='TSS-distal',
                  method='intensity')
}
}

