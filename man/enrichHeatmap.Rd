% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingfunctions.R
\name{enrichHeatmap}
\alias{enrichHeatmap}
\title{Given the output from enrichment(), creates a heatmap from
the ouput of the enrichment analysis. Presence or absence of
the pathway in enrichment of both type-specific (increased or decreased
log2fold change, low p-value) and shared (no change, higher p-value)
regulatory regions is plotted.}
\usage{
enrichHeatmap(input, title, pvalfilt = 0.01, removeonlyshared = FALSE,
  numshow = 10)
}
\arguments{
\item{input}{results from enrichment analysis}

\item{title}{title of the heatmap}

\item{pvalfilt}{p-value cut-off for inclusion in heatmap}

\item{removeonlyshared}{removes regions that come up signifigant only shared
regulatory regions when set to TRUE. Default is FALSE.}

\item{numshow}{number of top pathways (ranked according to p-value) of each type (expt, reference, shared) to show in the plot (default=10)}
}
\value{
heatmap
}
\description{
Given the output from enrichment(), creates a heatmap from
the ouput of the enrichment analysis. Presence or absence of
the pathway in enrichment of both type-specific (increased or decreased
log2fold change, low p-value) and shared (no change, higher p-value)
regulatory regions is plotted.
}
\examples{
\dontrun{
csvfile <- file.path(dir="yourfilepath", 'sampleinfo.csv')
sampleinfo <- loadCSVFile(csvfile)
samplePeaks <- loadBedFiles(sampleinfo)
consPeaks <- getConsensusPeaks(samplepeaks = samplePeaks, minreps = 2)
plotConsensusPeaks(samplepeaks = consPeaks)
TSSannot <- getTSS()
consPeaksAnnotated <- combineAnnotatePeaks(conspeaks = consPeaks,
                                          TSS = TSSannot,
                                          merge = TRUE,
                                          regionspecific = TRUE,
                                          distancefromTSSdist = 1500,
                                          distancefromTSSprox = 1000)
counts_consPeaks <- getCounts(annotpeaks = consPeaksAnnotated,
                              sampleinfo = sampleinfo,
                              reference = 'SAEC',
                              chrom = 'chr21')
altre_peaks <- countanalysis(counts=counts_consPeaks,
                             pval=0.01,
                             lfcvalue=1)
categaltre_peaks <- categAltrePeaks(altre_peaks,
			lfctypespecific = 1.5,
			lfcshared = 1.2,
			pvaltypespecific = 0.01,
			pvalshared = 0.05)
MFenrich <- pathenrich(analysisresults = categaltre_peaks,
                       ontoltype = 'MF',
                       enrichpvalfilt = 0.01)
BPenrich <- pathenrich(analysisresults=categaltre_peaks,
                       ontoltype='BP',
                       enrichpvalfilt=0.01)
plot1 <- enrichHeatmap(MFenrich, title='GO:MF, p<0.01')
plot2 <- enrichHeatmap(BPenrich, title='GO:BP, p<0.01')
}
}

