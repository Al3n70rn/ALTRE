% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingfunctions.R
\name{plotCountAnalysis}
\alias{plotCountAnalysis}
\title{Given the output from getCounts, plot a density plot
 of log2 RPKM values of regulation regions}
\usage{
<<<<<<< HEAD
plotCountAnalysis(altrepeakscateg, viewer = TRUE)
=======
plotCountAnalysis(altrepeakscateg, cols = c("#d3d3d3", "#C71585", "#B0E0E6",
  "#FFD700"))
>>>>>>> aef2bb38ab309985a1c03a3e3187889aa22470bd
}
\arguments{
\item{altrepeakscateg}{output generated from countanalysis() then
categAltrePeaks()}

<<<<<<< HEAD
\item{viewer}{whether the plot should be displayed in the RStudio viewer or
in Shiny/Knittr}
=======
\item{cols}{hex colors for points in this order: Ambiguous, Experiment-Specific, Reference-Specific, Shared}
>>>>>>> aef2bb38ab309985a1c03a3e3187889aa22470bd
}
\value{
a highcharter object
}
\description{
Given the output from getCounts, plot a density plot
 of log2 RPKM values of regulation regions
}
\examples{
\dontrun{
csvfile <- file.path(dir="yourfilepath", 'sampleinfo.csv')
sampleinfo <- loadCSVFile(csvfile)
samplePeaks <- loadBedFiles(sampleinfo)
consPeaks <- getConsensusPeaks(samplepeaks=samplePeaks,minreps=2)
plotConsensusPeaks(samplepeaks=consPeaks)
TSSannot<- getTSS()
consPeaksAnnotated <- combineAnnotatePeaks(conspeaks = consPeaks,
                                          TSS = TSSannot,
                                          merge = TRUE,
                                          regionspecific = TRUE,
                                          distancefromTSSdist = 1500,
                                          distancefromTSSprox = 1000)
counts_consPeaks <- getCounts(annotpeaks = consPeaksAnnotated,
                              sampleinfo = sampleinfo,
                              reference = 'SAEC',
                              chrom = 'chr21')
altre_peaks <- countanalysis(counts = counts_consPeaks,
                             pval = 0.01,
                             lfcvalue = 1)
categaltre_peaks <- categAltrePeaks(altre_peaks,
                                    lfctypespecific = 1.5,
                                    lfcshared = 1.2,
                                    pvaltypespecific = 0.01,
                                    pvalshared = 0.05)
plotCountAnalysis(categaltre_peaks)
}
}

