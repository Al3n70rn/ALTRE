% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingfunctions.R
\name{plotGREATenrich}
\alias{plotGREATenrich}
\title{Given the output from processPathways(), creates a heatmap from
the ouput of the GREAT enrichment analysis. Presence or absence of
the pathway in enrichment of both type-specific (increased or decreased
log2fold change, low p-value) and shared (no change, higher p-value)
regulatory regions is plotted.}
\usage{
plotGREATenrich(input, title = "GREAT Enrichment Analysis",
  pathwaycateg = NULL, test = "Binom", numshow = 10)
}
\arguments{
\item{input}{results from GREAT enrichment analysis}

\item{title}{title of the heatmap}

\item{pathwaycateg}{ontology, to see available ontologies in your input results (e.g. named
GREATpathways, type getOntologies(GREATpathways)}

\item{test}{character, "Binom" uses binomial test restuls, "Hyper" uses
hypergeometric test results.  Default is "Binom"}

\item{numshow}{number of top pathways (ranked according to p-value) of each type
(expt, reference, shared) to show in the plot (default=10)}
}
\value{
heatmap
}
\description{
Given the output from processPathways(), creates a heatmap from
the ouput of the GREAT enrichment analysis. Presence or absence of
the pathway in enrichment of both type-specific (increased or decreased
log2fold change, low p-value) and shared (no change, higher p-value)
regulatory regions is plotted.
}
\examples{
\dontrun{
csvfile <- file.path(dir="yourfilepath", 'sampleinfo.csv')
sampleinfo <- loadCSVFile(csvfile)
samplePeaks <- loadBedFiles(sampleinfo)
consPeaks <- getConsensusPeaks(samplepeaks = samplePeaks, minreps = 2)
plotConsensusPeaks(samplepeaks = consPeaks)
TSSannot <- getTSS()
consPeaksAnnotated <- combineAnnotatePeaks(conspeaks = consPeaks,
                                          TSS = TSSannot,
                                          merge = TRUE,
                                          regionspecific = TRUE,
                                          distancefromTSSdist = 1500,
                                          distancefromTSSprox = 1000)
counts_consPeaks <- getCounts(annotpeaks = consPeaksAnnotated,
                              sampleinfo = sampleinfo,
                              reference = 'SAEC',
                              chrom = 'chr21')
altre_peaks <- countanalysis(counts=counts_consPeaks,
                             pval=0.01,
                             lfcvalue=1)
categaltre_peaks <- categAltrePeaks(altre_peaks,
                             lfctypespecific = 1.5,
                             lfcshared = 1.2,
                             pvaltypespecific = 0.01,
                             pvalshared = 0.05)
GREAToutput <- runGREAT(peaks = categaltre_peaks)
GREATpathways <- processPathways(temp)
names(GREATpathways$Sig_Pathways)
 plotGREATenrich(GREATpathways,
                title = "GREAT Enrichment Analysis",
                pathwaycateg ="GO_Molecular_Function")
}

}

